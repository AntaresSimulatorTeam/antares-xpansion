name: Windows CI full build

on:
  push:
    branches:
      - main
      - develop
      - release/*
      - ci/*
jobs:

  windows:

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ windows-latest ]
        triplet: [ x64-windows ]

    env:
      # Indicates the location of the vcpkg as a Git submodule of the project repository.
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Enable git longpaths
        run: git config --system core.longpaths true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Restore both vcpkg and its artifacts from the GitHub cache service.
      - name: Restore vcpkg and its artifacts.
        uses: actions/cache@v3
        with:
          # The first path is the location of vcpkg (it contains the vcpkg executable and data files).
          # The other paths starting with '!' are exclusions: they contain termporary files generated during the build of the installed packages.
          path: |
            ${{ env.VCPKG_ROOT }}
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
          # The key is composed in a way that it gets properly invalidated: this must happen whenever vcpkg's Git commit id changes, or the list of packages changes. In this case a cache miss must happen and a new entry with a new key with be pushed to GitHub the cache service.
          # The key includes: hash of the vcpkg.json file, the hash of the vcpkg Git commit id, and the used vcpkg's triplet. The vcpkg's commit id would suffice, but computing an hash out it does not harm.
          # Note: given a key, the cache content is immutable. If a cache entry has been created improperly, in order the recreate the right content the key must be changed as well, and it must be brand new (i.e. not existing already).
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ hashFiles( '.git/modules/vcpkg/HEAD' )}}-${{ matrix.triplet }}-invalidate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-tests.txt
          pip install -r requirements-ui.txt

      - name: Pre-requisites
        shell: cmd
        run: |
          choco install wget zip unzip --no-progress
          wget -nv https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1/msmpisetup.exe
          msmpisetup.exe -unattend

      - name: Read antares-xpansion version
        id: antares-xpansion-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_xpansion_version'

      - name: Install deps with VCPKG
        run: |
          cd vcpkg
          ./bootstrap-vcpkg.sh
          vcpkg install --triplet ${{matrix.triplet}}
          rm -rf buildtrees
          rm -rf packages
          rm -rf downloads
        shell: bash

      - name: Configure
        run: |
          $pwd=Get-Location
          cmake -B _build -S . -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_INSTALL_PREFIX=_install -DBUILD_UI=ON

      - name: Build
        run: |
          cmake --build _build --config Release -j2 --target install

      - name: Running unit tests
        shell: cmd
        run: |
          set PATH=%PATH%;C:\Program Files\Microsoft MPI\Bin\
          cd _build
          ctest -C Release --output-on-failure -L "medium|unit|benders|lpnamer"

      - name: Installer .zip creation
        run: |
          cd _build
          cpack -G ZIP

      - id: create-single-file
        name: Single file .zip creation
        uses: ./.github/workflows/single-file-creation-zip
        with:
          antares-xpansion-version: ${{steps.antares-xpansion-version.outputs.result}}


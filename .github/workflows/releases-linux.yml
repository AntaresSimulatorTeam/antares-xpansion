name: Release asset upload (Ubuntu)

on:
  release:
    types: [created]

env:
  GITHUB_TOKEN: ${{ github.token }}
  
jobs:

  windows:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2 
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
          
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements-tests.txt
    
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.0 
      
    - name: Read antares-solver version
      id: antares-version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'antares-version.json'
        prop_path: 'antares_version'
           
    - name: Download pre-compiled librairies
      run: |
           wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v1.0.0/rte-antares-deps-${{matrix.os}}-Release-solver.tar.gz
           tar -xvf rte-antares-deps-${{matrix.os}}-Release-solver.tar.gz
           rm -rf rte-antares-deps-${{matrix.os}}-Release-solver.tar.gz
           
           wget https://github.com/AntaresSimulatorTeam/Antares_Simulator/releases/download/v${{steps.antares-version.outputs.prop}}/antares-${{steps.antares-version.outputs.prop}}-Ubuntu-20.04.tar.gz
           tar -xvf antares-${{steps.antares-version.outputs.prop}}-Ubuntu-20.04.tar.gz -C rte-antares-deps-Release --strip-components=1
           rm -rf antares-${{steps.antares-version.outputs.prop}}-Ubuntu-20.04.tar.gz
           
    - name: Init submodule
      run: |
           git submodule update --init --recursive .
    
    - name: Install mandatory system libraries 
      run: |
           sudo apt-get update --fix-missing
           sudo apt-get install libjsoncpp-dev libgtest-dev libboost-mpi-dev libboost-program-options-dev
           cd /usr/src/googletest/
           sudo cmake .
           sudo cmake --build . --target install        
    
    - name: Configure
      run: |
           cmake -B _build -S . -DDEPS_INSTALL_DIR=rte-antares-deps-Release -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release -DUSE_SEQUENTIAL=true -DUSE_MPI=true
    
    - name: Build
      run: |
           cmake --build _build --config Release -j2

    - name: Running unit tests
      run: |
           cd _build
           ctest -C Release --output-on-failure -L "medium|unit|benders"
        
    - name: .tar.gz creation
      run: |
           cd _build
           cpack -G TGZ
           export TGZ_NAME=$(ls *.tar.gz)
           echo "TGZ_NAME=$TGZ_NAME" >> $GITHUB_ENV
           
    - name: .deb creation
      run: |
           cd _build
           cpack -G DEB
           export DEB_NAME=$(ls *.deb)
           echo "DEB_NAME=$DEB_NAME" >> $GITHUB_ENV
           
    - name: Upload .tar.gz
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.TGZ_NAME}}
        asset_name: ${{env.TGZ_NAME}}
        asset_content_type: application/octet-stream
        
    - name: Upload .deb
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.DEB_NAME}}
        asset_name: ${{env.DEB_NAME}}
        asset_content_type: application/octet-stream
    

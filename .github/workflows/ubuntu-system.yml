name: Ubuntu CI (system libs)

on:
  push:
    branches:
      - main
      - develop
      - features/*
      - feature/*
      - fix/*
      - release/*
jobs:

  build:

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
          
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip3 install -r requirements-tests.txt
          pip3 install -r requirements-ui.txt

    - name: Install libraries
      run: |
           sudo apt-get update --fix-missing
           sudo apt-get install libjsoncpp-dev libgtest-dev libboost-mpi-dev libboost-program-options-dev
           cd /usr/src/googletest/
           sudo cmake .
           sudo cmake --build . --target install
    
    - name: Read antares-solver version
      id: antares-version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'antares-version.json'
        prop_path: 'antares_version'
        
    - name: Read antares-xpansion version
      id: antares-xpansion-version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'antares-version.json'
        prop_path: 'antares_xpansion_version'
        
    - name: Read antares-deps version
      id: antares-deps-version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'antares-version.json'
        prop_path: 'antares_deps_version'
        
    - name: Download pre-compiled librairies
      uses: ./.github/workflows/download-extract-precompiled-libraries-tgz
      with:
        antares-deps-version: ${{steps.antares-deps-version.outputs.prop}}
        antares-version: ${{steps.antares-version.outputs.prop}}
        os: ${{matrix.os}}
        os-full-name: Ubuntu-20.04

    - name: Configure
      run: |
           cmake -B _build -S . -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DDEPS_INSTALL_DIR=rte-antares-deps-Release -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release -DUSE_MPI=ON -DCMAKE_INSTALL_PREFIX=_install -DBUILD_antares_solver=OFF -DBUILD_UI=ON

    - name: Build
      run: |
           cmake --build _build --config Release -j2 --target install
           
    - name: Running unit tests
      run: |
           cd _build
           ctest -C Release --output-on-failure -L "medium|unit|benders|lpnamer"
           
    - id: create-single-file
      name: Single file .tar.gz creation
      uses: ./.github/workflows/single-file-creation-tgz
      with:
        antares-xpansion-version: ${{steps.antares-xpansion-version.outputs.prop}}
      
    - name: Installer .tar.gz creation
      run: |
           cd _build
           cpack -G TGZ
           
    - name: Installer .deb creation
      run: |
           cd _build
           cpack -G DEB

    - name: Installer upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-xpansion-ubuntu-archive
        path: _build/*.tar.gz
        
    - name: Deb Installer upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-xpansion-ubuntu-deb
        path: _build/*.deb

    - name: Single file upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-xpansion-ubuntu-single-file
        path: ${{ steps.create-single-file.outputs.archive-path }}


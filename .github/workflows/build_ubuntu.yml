name: Ubuntu build

on:
  merge_group:
  push:
    branches:
      - main
      - develop
      - dependabot/*
  pull_request:
  release:
    types: [ created ]

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        xprs: [
          #{ value: XPRESS-ON, ref: 8.13a },
          { value: XPRESS-ON, ref: 9.2.5 },
          #       { value: XPRESS-OFF }
        ]
    env:
      XPRESSDIR: ${{ github.workspace }}/xpress
      XPRESS: ${{ github.workspace }}/xpress/bin
      XPRS_LIB_Path: ${{ github.workspace }}/xpress/lib
      ORTOOLS_DIR: $GITHUB_WORKSPACE/or-tools

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checkout xpressmp linux
        if: matrix.xprs.value == 'XPRESS-ON'
        uses: actions/checkout@v4
        with:
          repository: rte-france/xpress-mp
          path: ${{ env.XPRESSDIR }}
          ref: ${{ matrix.xprs.ref}}
          token: ${{ secrets.AS_TOKEN }} #reniew token periodically

      - run: |
          sudo apt-get update

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.3
        with:
          key: ${{ matrix.os }}-${{ matrix.xprs.value }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-tests.txt
          pip install -r requirements-ui.txt

      - name: Install mandatory system libraries
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install -y ccache libtbb-dev
          sudo apt-get install -y g++-10 gcc-10

      - name: Update alternatives
        #mpicxx  uses "g++" so we need g++ to be symbolic link to g++-10
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
          sudo update-alternatives --set cc /usr/bin/gcc
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
          sudo update-alternatives --set c++ /usr/bin/g++

      - uses: lukka/get-cmake@latest
        with:
          useLocalCache: false
          useCloudCache: true

      - name: Read antares-solver version
        id: antares-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_version'

      - name: Read antares-xpansion version
        id: antares-xpansion-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_xpansion_version'

      - name: Read antares-deps version
        id: antares-deps-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_deps_version'

      - name: Config OR-Tools URL
        run: |
          echo "ORTOOLS_URL=https://github.com/rte-france/or-tools/releases/download/v9.8-rte1.0/ortools_cxx_ubuntu-20.04_static_sirius.zip" >> $GITHUB_ENV

      - name: Download pre-compiled librairies
        uses: ./.github/workflows/download-extract-precompiled-libraries-tgz
        with:
          antares-deps-version: ${{steps.antares-deps-version.outputs.result}}
          antares-version: ${{steps.antares-version.outputs.result}}
          os: ${{matrix.os}}
          os-full-name: Ubuntu-20.04
          ortools-url: ${{env.ORTOOLS_URL}}
          ortools-dir: ${{env.ORTOOLS_DIR}}

      - run: |
          mkdir -p ${{ github.workspace }}/vcpkg_cache

      - name: Unshallow vcpkg for action
        run: |
          pushd vcpkg
          ./bootstrap-vcpkg.sh
          git fetch --unshallow
          popd

      - name: Configure
        shell: bash
        #XPRESS_VALUE = ${{ matrix.xprs }} == "XPRESS-ON" ? "ON" : "OFF"
        run: |
          [[ ${{ matrix.xprs.value }} == "XPRESS-ON" ]] && XPRESS_VALUE="ON" || XPRESS_VALUE="OFF" 
          cmake -B _build -S . \
                -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                -DCMAKE_C_COMPILER=/usr/bin/gcc-10 \
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                -DCMAKE_CXX_COMPILER=/usr/bin/g++-10 \
                -DDEPS_INSTALL_DIR=rte-antares-deps-Release \
                -DBUILD_TESTING=ON \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX=_install \
                -DCMAKE_PREFIX_PATH=${{env.ORTOOLS_DIR}}/install \
                -DBUILD_UI=ON  \
                -DXPRESS=${{ env.XPRESS_VALUE }} \
                -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: |
          cmake --build _build --config Release -j$(nproc)

      - name: Test
        run: |
          export PATH=${GITHUB_WORKSPACE}/_build/vcpkg_installed/x64-linux/tools/openmpi/bin/:$PATH
          cd _build
          ctest -C Release --output-on-failure -L "medium|unit|benders|lpnamer"

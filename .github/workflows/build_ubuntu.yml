name: Ubuntu build (precompiled dependencies)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
  release:
    types: [ created ]

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-20.04]
        xprs: [ON, OFF]
    env:
      XPRESSDIR: ${{ github.workspace }}/xpress
      XPRESS: ${{ github.workspace }}/xpress/bin
      XPRS_LIB_Path: ${{ github.workspace }}/xpress/lib

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Checkout xpressmp linux
        uses: actions/checkout@v2
        with:
          repository: rte-france/xpress-mp
          path: ${{ env.XPRESSDIR }}
          ref: master
          token: ${{ secrets.AS_TOKEN }} #reniew token periodically

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}-${{ matrix.xprs }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-tests.txt
          pip install -r requirements-ui.txt

      - name: Install mandatory system libraries
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install libjsoncpp-dev libgtest-dev libboost-mpi-dev libboost-program-options-dev libtbb-dev
          cd /usr/src/googletest/
          sudo cmake .
          sudo cmake --build .

      - name: Read antares-solver version
        id: antares-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_version'

      - name: Read antares-xpansion version
        id: antares-xpansion-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_xpansion_version'

      - name: Read antares-deps version
        id: antares-deps-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_deps_version'

      - name: Download pre-compiled librairies
        uses: ./.github/workflows/download-extract-precompiled-libraries-tgz
        with:
          antares-deps-version: ${{steps.antares-deps-version.outputs.prop}}
          antares-version: ${{steps.antares-version.outputs.prop}}
          os: ${{matrix.os}}
          os-full-name: Ubuntu-20.04

      - name: Configure
        shell: bash
        run: |
          cmake -B _build -S . \
                -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                -DDEPS_INSTALL_DIR=rte-antares-deps-Release \
                -DBUILD_TESTING=ON \
                -DCMAKE_BUILD_TYPE=Release \
                -DUSE_MPI=ON \
                -DCMAKE_INSTALL_PREFIX=_install \
                -DBUILD_UI=ON  \
                -DXPRESS=${{ matrix.xprs }} \
                -DXPRESS_ROOT=${{ env.XPRESSDIR }}

      - name: Build
        run: |
          cmake --build _build --config Release -j8

      - name: Test
        run: |
          cd _build
          ctest -C Release --output-on-failure -L "medium|unit|benders|lpnamer"

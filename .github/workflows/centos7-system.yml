name: Centos7 CI (docker image)

on:
  push:
    branches:
      - main
      - develop
      - features/*
      - feature/*
      - fix/*
      - release/*
  release:
    types: [ created ]

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:

  docker_publish:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v1.1.2
        with:
          files: |
            docker/centos7
            antares-version.json

      - name: Read antares-solver version
        id: antares-version
        if: steps.changed-files.outputs.modified_files != ''
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_version'

      - name: Read antares-deps version
        id: antares-deps-version
        if: steps.changed-files.outputs.modified_files != ''
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_deps_version'

      - name: Docker file push
        id: docker_push
        if: steps.changed-files.outputs.modified_files != ''
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          ANTARES_DEPS_VERSION: ${{steps.antares-deps-version.outputs.prop}}
          ANTARES_SOLVER_VERSION: ${{steps.antares-version.outputs.prop}}
        with:
          name: antaresrte/rte-antares
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: docker
          dockerfile: centos7
          cache: false
          tags: centos7-xpansion
          buildargs: ANTARES_DEPS_VERSION, ANTARES_SOLVER_VERSION

  userguide:
    runs-on: ubuntu-latest
    outputs:
      pdf-name: ${{ steps.create-user-guide.outputs.pdf-name }}

    steps:
      - uses: actions/checkout@v2

      - name: Read antares-xpansion version
        id: antares-xpansion-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_xpansion_version'

      - id: create-user-guide
        name: user guide pdf creation
        uses: ./.github/workflows/generate-userguide-pdf
        with:
          antares-xpansion-version: ${{steps.antares-xpansion-version.outputs.prop}}

      - name: user guide upload
        id: userguide_upload
        uses: actions/upload-artifact@v2
        with:
          name: user-guide
          path: ${{ steps.create-user-guide.outputs.pdf-path }}

  build:

    runs-on: ubuntu-latest
    needs: [docker_publish, userguide]
    container: 'antaresrte/rte-antares:centos7-xpansion'

    steps:
    
    - uses: nelonoel/branch-name@v1.0.1

    - name: Get release
      if: github.event_name == 'release' && github.event.action == 'created'
      id: get_release
      uses: bruceadams/get-release@v1.2.3

    - name: Checkout
      run: |
          git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git -b ${BRANCH_NAME} .
        
    - name: Read antares-xpansion version
      id: antares-xpansion-version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'antares-version.json'
        prop_path: 'antares_xpansion_version'

    - name: Init submodule
      run: |
           git submodule update --init --recursive antares-deps

    - name: Install dependencies
      run: |
          pip3 install -r requirements-tests.txt
          pip3 install -r requirements-ui.txt

    - name: Download userguide
      uses: actions/download-artifact@v2
      with:
        name: user-guide
        path: docs/

    - name: Configure
      run: |
           source /opt/rh/devtoolset-7/enable
           export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
           export PATH=/usr/lib64/openmpi/bin:$PATH
           cmake3 -B _build -S . -DDEPS_INSTALL_DIR=/rte-antares-deps-Release -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release -DUSE_MPI=ON -DCMAKE_INSTALL_PREFIX=_install -DBUILD_UI=ON -DUSER_GUIDE_PATH="docs/${{ needs.userguide.outputs.pdf-name }}"

    - name: Build
      run: |
           source /opt/rh/devtoolset-7/enable
           export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
           export PATH=/usr/lib64/openmpi/bin:$PATH
           cmake3 --build _build --config Release -j2 --target install

    - name: Running unit tests
      run: |
           cd _build
           ctest3 -C Release --output-on-failure -L "unit|benders"

    - name: .tar.gz creation
      run: |
        cd _build
        cpack3 -G TGZ
        export TGZ_NAME=$(ls *.tar.gz)
        echo "TGZ_NAME=$TGZ_NAME" >> $GITHUB_ENV

    - name: Installer .rpm creation
      run: |
        cd _build
        cpack3 -G RPM
        export RPM_NAME=$(ls *.rpm)
        echo "RPM_NAME=$RPM_NAME" >> $GITHUB_ENV

    - id: create-single-file
      name: Single file .tar.gz creation
      uses: ./.github/workflows/single-file-creation-tgz
      with:
        antares-xpansion-version: ${{steps.antares-xpansion-version.outputs.prop}}

    - name: Upload  .tar.gz
      uses: actions/upload-artifact@v2
      with:
        name: antares-xpansion-centos7-archive
        path: _build/*.tar.gz
        
    - name: Upload rpm
      uses: actions/upload-artifact@v2
      with:
        name: antares-xpansion-centos7-rpm
        path: _build/*.rpm

    - name: Upload single file
      uses: actions/upload-artifact@v2
      with:
        name: antares-xpansion-centos-single-file
        path: ${{ steps.create-single-file.outputs.archive-path }}

    - name: Publish .tar.gz
      if: github.event_name == 'release' && github.event.action == 'created'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.TGZ_NAME}}
        asset_name: ${{env.TGZ_NAME}}
        asset_content_type: application/octet-stream

    - name: Publish .rpm
      if: github.event_name == 'release' && github.event.action == 'created'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.RPM_NAME}}
        asset_name: ${{env.RPM_NAME}}
        asset_content_type: application/octet-stream

    - name: Publish single file
      if: github.event_name == 'release' && github.event.action == 'created'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{ steps.create-single-file.outputs.archive-path }}
        asset_name: ${{ steps.create-single-file.outputs.archive-name }}
        asset_content_type: application/octet-stream

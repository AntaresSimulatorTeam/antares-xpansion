name: Centos7 Build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
  release:
    types: [ created ]

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  docker_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v32
        with:
          files: |
            docker/centos7-bare

      - name: Docker file push
        id: docker_push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: antaresrte/rte-antares
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: docker
          dockerfile: centos7-bare
          cache: false
          tags: centos7-xpansion-bare
  build:
    runs-on: ubuntu-latest
    needs: docker_publish
    container: 'antaresrte/rte-antares:centos7-xpansion-bare'
    strategy:
      matrix:
        xprs: [ XPRESS-ON, XPRESS-OFF ]
    env:
      XPRESSDIR: ${{ github.workspace }}/xpress
      XPRESS: ${{ github.workspace }}/xpress/bin
      XPRS_LIB_Path: ${{ github.workspace }}/xpress/lib

    steps:
      - name: Get release
        if: github.event_name == 'release' && github.event.action == 'created'
        id: get_release
        uses: bruceadams/get-release@v1.2.3
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Checkout xpressmp linux
        if: matrix.xprs == 'XPRESS-ON'
        run: |
          git clone https://${{ secrets.AS_TOKEN }}@github.com/rte-france/xpress-mp.git ${{ env.XPRESSDIR }}

      - name: Read antares-solver version
        id: antares-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_version'
      - name: Read antares-deps version
        id: antares-deps-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'antares-version.json'
          prop_path: 'antares_deps_version'
      - name: Download pre-compiled librairies
        uses: ./.github/workflows/download-extract-precompiled-libraries-tgz
        with:
          antares-deps-version: ${{steps.antares-deps-version.outputs.prop}}
          antares-version: ${{steps.antares-version.outputs.prop}}
          os: centos7
          os-full-name: CentOS-7.9.2009
      - name: Install dependencies
        run: |
          pip3 install -r requirements-tests.txt
          pip3 install -r requirements-ui.txt
      - name: Configure
        run: |
          [[ ${{ matrix.xprs }} == "XPRESS-ON" ]] && XPRESS_VALUE="ON" || XPRESS_VALUE="OFF" 
          source /opt/rh/devtoolset-9/enable
          export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
          export PATH=/usr/lib64/openmpi/bin:$PATH
          cmake3 -B _build -S . \
                 -DDEPS_INSTALL_DIR=rte-antares-deps-Release \
                 -DBUILD_TESTING=ON \
                 -DCMAKE_BUILD_TYPE=Release \
                 -DUSE_MPI=ON \
                 -DCMAKE_INSTALL_PREFIX=_install \
                 -DBUILD_UI=ON \
                 -DXPRESS=${{ env.XPRESS_VALUE }} \
                 -DXPRESS_ROOT=${{ env.XPRESSDIR }} \
                 -DALLOW_RUN_AS_ROOT=ON
      - name: Build
        run: |
          source /opt/rh/devtoolset-9/enable
          export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
          export PATH=/usr/lib64/openmpi/bin:$PATH
          cmake3 --build _build --config Release -j8 --target install
      - name: Running unit tests
        shell: bash
        run: |
          source /etc/profile.d/modules.sh
          module load mpi
          export LD_LIBRARY_PATH=LD_LIBRARY_PATH:${{ env.XPRS_LIB_Path }}
          export XPRESS=${{ env.XPRESS }}
          cd _build
          ctest3 -C Release --output-on-failure -L "unit|benders|lpnamer|medium"
name: Centos7 release

on:
  release:
    types: [ created ]

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:

  docker_publish:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v32
        with:
          files: |
            docker/centos7-bare

      - name: Docker file push
        id: docker_push
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: antaresrte/rte-antares
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: docker
          dockerfile: centos7-bare
          cache: false
          tags: centos7-xpansion-bare

  userguide:
    runs-on: ubuntu-latest
    outputs:
      pdf-name: ${{ steps.create-user-guide.outputs.pdf-name }}

    steps:
      - uses: actions/checkout@v3

      - name: Read antares-xpansion version
        id: antares-xpansion-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_xpansion_version'

      - id: create-user-guide
        name: user guide pdf creation
        uses: ./.github/workflows/generate-userguide-pdf
        with:
          antares-xpansion-version: ${{steps.antares-xpansion-version.outputs.result}}

      - name: user guide upload
        id: userguide_upload
        uses: actions/upload-artifact@v3
        with:
          name: user-guide
          path: ${{ steps.create-user-guide.outputs.pdf-path }}

  versions:
    runs-on: ubuntu-latest
    outputs:
      antares-version: ${{steps.antares-version.outputs.result}}
      antares-xpansion-version: ${{steps.antares-xpansion-version.outputs.result}}
      antares-deps-version: ${{steps.antares-deps-version.outputs.result}}
    steps:
      - uses: actions/checkout@v3
      - name: Read antares-solver version
        id: antares-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_version'

      - name: Read antares-xpansion version
        id: antares-xpansion-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_xpansion_version'

      - name: Read antares-deps version
        id: antares-deps-version
        uses: ./.github/actions/read-json-value
        with:
          path: 'antares-version.json'
          key: 'antares_deps_version'

  build:
    runs-on: ubuntu-latest
    needs: [ docker_publish, userguide, versions ]
    container: 'antaresrte/rte-antares:centos7-xpansion-bare'
    strategy:
      matrix:
        xprs: [ XPRESS-OFF ]
    env:
      XPRESSDIR: ${{ github.workspace }}/xpress
      XPRESS: ${{ github.workspace }}/xpress/bin
      XPRS_LIB_Path: ${{ github.workspace }}/xpress/lib
      XPRESSDIR_CONTAINER: ${GITHUB_WORKSPACE}/xpress
      XPRESS_CONTAINER: ${GITHUB_WORKSPACE}/xpress/bin
      XPRS_LIB_Path_CONTAINER: ${GITHUB_WORKSPACE}/xpress/lib

    steps:
      - id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Download pre-compiled librairies
        uses: ./.github/workflows/download-extract-precompiled-libraries-tgz
        with:
          antares-deps-version: ${{needs.versions.outputs.antares-deps-version}}
          antares-version: ${{needs.versions.outputs.antares-version}}
          os: centos7
          os-full-name: CentOS-7.9.2009
          #variant: -ortools-xpress

      - name: Compile Boost
        uses: ./.github/workflows/compile-boost
        with:
          prefix: "../rte-antares-deps-Release/"

      - name: Install dependencies
        run: |
          pip3 install -r requirements-tests.txt
          pip3 install -r requirements-ui.txt

      - name: Download userguide
        uses: actions/download-artifact@v3
        with:
          name: user-guide
          path: docs/

      - name: Checkout xpressmp linux
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AS_TOKEN }}
          repository: rte-france/xpress-mp
          path: ${{ env.XPRESSDIR }}
          github-server-url: https://github.com
          ref: 8.13a
        if: matrix.xprs == 'XPRESS-ON'

      - name: Configure
        shell: bash
        run: |
          if [ ${{ matrix.xprs }} == "XPRESS-ON" ]; then
          export XPRESS_VALUE="ON"
          else
          export XPRESS_VALUE="OFF"
          fi
          source /opt/rh/devtoolset-9/enable
          export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
          export PATH=/usr/lib64/openmpi/bin:$PATH
          cmake3 -B _build -S . \
                 -DDEPS_INSTALL_DIR=rte-antares-deps-Release \
                 -DBUILD_TESTING=ON \
                 -DCMAKE_BUILD_TYPE=Release \
                 -DCMAKE_INSTALL_PREFIX=_install \
                 -DBUILD_UI=ON \
                 -DUSER_GUIDE_PATH="docs/${{ needs.userguide.outputs.pdf-name }}" \
                 -DXPRESS=${XPRESS_VALUE} \
                 -DXPRESS_ROOT=${XPRESSDIR} \
                 -DALLOW_RUN_AS_ROOT=ON

      - name: Build
        shell: bash
        run: |
          source /opt/rh/devtoolset-9/enable
          export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
          export PATH=/usr/lib64/openmpi/bin:$PATH
          cmake3 --build _build --config Release -j2 --target install

      - name: set name variables
        id: single_file_name
        shell: bash
        run: |
          if [ ${{ matrix.xprs }} == "XPRESS-ON" ]; then
          WITH_XPRS="-xpress"
          else
          WITH_XPRS=""
          fi
          VERSION=${{needs.versions.outputs.antares-xpansion-version}}${WITH_XPRS}
          echo "VERSION_WITH_XPRESS=$VERSION" >> $GITHUB_ENV

      - name: .tar.gz creation
        run: |
          cd _build
          export FILE_NAME="antaresXpansion-${{env.VERSION_WITH_XPRESS}}-CentOS-7.9.2009"
          cpack3 -G TGZ -D CPACK_PACKAGE_FILE_NAME=$FILE_NAME
          echo "TGZ_NAME=$FILE_NAME.tar.gz" >> $GITHUB_ENV

      - id: create-single-file
        name: Single file .tar.gz creation
        uses: ./.github/workflows/single-file-creation-tgz
        with:
          antares-xpansion-version: ${{env.VERSION_WITH_XPRESS}}

      #######################

      - name: Get release
        if: github.event_name == 'release' && github.event.action == 'created'
        id: get_release
        uses: bruceadams/get-release@v1.2.3

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.get_release.outputs.tag_name }} _build/${{env.TGZ_NAME}}

      ########################
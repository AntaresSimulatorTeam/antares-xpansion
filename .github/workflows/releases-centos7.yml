name: Release asset upload (Centos7)

on:
  release:
    types: [created]

env:
  GITHUB_TOKEN: ${{ github.token }}
  
jobs:

  windows:

    runs-on: ubuntu-latest
    container: 'centos:7'

    steps:
    
    - name: Set up Python
      run: |
           yum update -y
           yum install -y python3 python3-pip
          
    - name: Install mandatory system libraries
      run: |
           yum install -y wget git epel-release redhat-lsb-core gcc gcc-c++ make centos-release-scl scl-utils
           yum install -y jsoncpp-devel gtest-devel openmpi-devel boost-openmpi-devel doxygen graphviz boost-program-options
           yum install -y cmake3 devtoolset-7 environment-modules rpm-build
           
    - uses: nelonoel/branch-name@v1.0.1
    
    - name: Checkout
      run: |
          git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git -b ${BRANCH_NAME} .
          
    - name: Read antares-solver version
      id: antares-version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'antares-version.json'
        prop_path: 'antares_version'
    
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.0      
           
    - name: Download pre-compiled librairies
      run: |
           wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v1.1.0/rte-antares-deps-centos7-Release-solver.tar.gz
           tar -xvf rte-antares-deps-centos7-Release-solver.tar.gz
           rm -rf rte-antares-deps-centos7-Release-solver.tar.gz
           
           wget https://github.com/AntaresSimulatorTeam/Antares_Simulator/releases/download/v${{steps.antares-version.outputs.prop}}/antares-${{steps.antares-version.outputs.prop}}-CentOS-7.9.2009.tar.gz
           tar -xvf antares-${{steps.antares-version.outputs.prop}}-CentOS-7.9.2009.tar.gz -C rte-antares-deps-Release --strip-components=1
           rm -rf antares-${{steps.antares-version.outputs.prop}}-CentOS-7.9.2009.tar.gz
           
    - name: Init submodule
      run: |
           git submodule update --init --recursive .
          
    - name: Install dependencies
      run: |
          pip3 install -r requirements-tests.txt
    
    - name: Configure
      run: |
           source /opt/rh/devtoolset-7/enable
           export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
           export PATH=/usr/lib64/openmpi/bin:$PATH
           cmake3 -B _build -S . -DDEPS_INSTALL_DIR=rte-antares-deps-Release -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release -DUSE_SEQUENTIAL=true -DUSE_MPI=true
    
    - name: Build
      run: |
           source /opt/rh/devtoolset-7/enable
           export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH
           export PATH=/usr/lib64/openmpi/bin:$PATH
           cmake3 --build _build --config Release -j2
    
    - name: Running unit tests
      run: |
           cd _build
           ctest3 -C Release --output-on-failure -L "unit|benders"
        
    - name: .tar.gz creation
      run: |
           cd _build
           cpack3 -G TGZ
           export TGZ_NAME=$(ls *.tar.gz)
           echo "TGZ_NAME=$TGZ_NAME" >> $GITHUB_ENV
           
    - name: Installer .rpm creation
      run: |
           cd _build
           cpack3 -G RPM
           export RPM_NAME=$(ls *.rpm)
           echo "RPM_NAME=$RPM_NAME" >> $GITHUB_ENV
           
    - name: Upload .tar.gz
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.TGZ_NAME}}
        asset_name: ${{env.TGZ_NAME}}
        asset_content_type: application/octet-stream
           
    - name: Upload .rpm
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.RPM_NAME}}
        asset_name: ${{env.RPM_NAME}}
        asset_content_type: application/octet-stream
    
    

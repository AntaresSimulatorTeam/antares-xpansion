name: Release asset upload

on:
  release:
    types: [created]

env:
  GITHUB_TOKEN: ${{ github.token }}
  
jobs:

  windows:

    runs-on: ubuntu-latest
    container: 'centos:7'

    steps:
    - uses: actions/checkout@v2 
    
    - name: Set up Python
      run: |
           yum update -y
           yum install -y python3 python3-pip
          
    - name: Install dependencies
      run: |
          pip3 install -r src/src_python/requirements.txt
          pip3 install -r src/tests/examples/requirements.txt
    
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.0     
        
    - name: Install mandatory system libraries
      run: |
           yum install -y wget git epel-release redhat-lsb-core gcc gcc-c++ make centos-release-scl scl-utils
           yum install -y jsoncpp-devel gtest-devel openmpi-devel boost-openmpi-devel doxygen graphviz
           yum install -y cmake3 devtoolset-7
           
    - name: Download pre-compiled librairies
      run: |
           wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v1.1.0/rte-antares-deps-centos7-Release-solver.tar.gz
           tar -xvf rte-antares-deps-centos7-Release-solver.tar.gz
           rm -rf rte-antares-deps-centos7-Release-solver.tar.gz
           
    - name: Init submodule
      run: |
           git submodule update --init --recursive .
        
    
    - name: Configure
      run: |
           source /opt/rh/devtoolset-7/enable
           cmake3 -B _build -S . -DDEPS_INSTALL_DIR=rte-antares-deps-Release -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release -DUSE_SEQUENTIAL=true -DUSE_MPI=true
    
    - name: Build
      run: |
           cmake --build _build --config Release -j2
               
    - name: Running unit tests
      run: |
           cd _build
           ctest -C Release --output-on-failure -L "medium"    
        
    - name: .tar.gz creation
      run: |
           cd _build
           cpack -G TGZ
           export TGZ_NAME=$(ls *.tar.gz)
           echo "TGZ_NAME=$TGZ_NAME" >> $GITHUB_ENV
           
    - name: Upload .tar.gz
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.TGZ_NAME}}
        asset_name: ${{env.TGZ_NAME}}
        asset_content_type: application/octet-stream
    
